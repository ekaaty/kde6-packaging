From bdef648edd54e146c30e881d8eb95990a59c5bbc Mon Sep 17 00:00:00 2001
From: Akseli Lahtinen <akselmo@akselmo.dev>
Date: Fri, 1 Dec 2023 11:27:26 +0000
Subject: [PATCH] WidgetsAskUserActionHandler: Use QPointer to check the
 validity of parent widgets

If Dolphin is closed during the copying process,
and the overwrite/skip dialog appears,
this crashes the copying process since the
parent shows to faulty location.

Use QPointer to check that the parent widgets are still
valid. If not, we just use nullptr, and the dialogs
will still open.

This also cleans some repetition in code.

BUG:448532
---
 src/widgets/widgetsaskuseractionhandler.cpp | 90 +++++++++------------
 1 file changed, 39 insertions(+), 51 deletions(-)

diff --git a/src/widgets/widgetsaskuseractionhandler.cpp b/src/widgets/widgetsaskuseractionhandler.cpp
index a5004c9036..434a16ab71 100644
--- a/src/widgets/widgetsaskuseractionhandler.cpp
+++ b/src/widgets/widgetsaskuseractionhandler.cpp
@@ -22,6 +22,7 @@
 
 #include <QApplication>
 #include <QDialogButtonBox>
+#include <QPointer>
 #include <QRegularExpression>
 #include <QUrl>
 
@@ -40,7 +41,10 @@ public:
     void savePersistentUserReply(KIO::AskUserActionInterface::MessageDialogType type, KConfigGroup &cg, const QString &dontAskAgainName, int result);
 
     WidgetsAskUserActionHandler *const q;
-    QWidget *m_parentWidget = nullptr;
+    QPointer<QWidget> m_parentWidget = nullptr;
+
+    QWidget *getParentWidget(KJob *job);
+    QWidget *getParentWidget(QWidget *widget);
 };
 
 bool KIO::WidgetsAskUserActionHandlerPrivate::gotPersistentUserReply(KIO::AskUserActionInterface::MessageDialogType type,
@@ -106,6 +110,36 @@ void KIO::WidgetsAskUserActionHandlerPrivate::savePersistentUserReply(KIO::AskUs
     }
 }
 
+QWidget *KIO::WidgetsAskUserActionHandlerPrivate::getParentWidget(KJob *job)
+{
+    // This needs to be in qpointer, otherwise copying process
+    // will crash if done in background and dolphin is closed
+    QPointer<QWidget> parentWidget = nullptr;
+
+    if (job) {
+        parentWidget = KJobWidgets::window(job);
+    }
+
+    return getParentWidget(parentWidget);
+}
+
+QWidget *KIO::WidgetsAskUserActionHandlerPrivate::getParentWidget(QWidget *widget)
+{
+    // This needs to be in qpointer, otherwise copying process
+    // will crash if done in background and dolphin is closed
+    QPointer<QWidget> parentWidget = widget;
+
+    if (!parentWidget) {
+        parentWidget = this->m_parentWidget;
+    }
+
+    if (!parentWidget) {
+        parentWidget = qApp->activeWindow();
+    }
+
+    return parentWidget;
+}
+
 KIO::WidgetsAskUserActionHandler::WidgetsAskUserActionHandler(QObject *parent)
     : KIO::AskUserActionInterface(parent)
     , d(new WidgetsAskUserActionHandlerPrivate(this))
@@ -128,22 +162,8 @@ void KIO::WidgetsAskUserActionHandler::askUserRename(KJob *job,
                                                      const QDateTime &mtimeSrc,
                                                      const QDateTime &mtimeDest)
 {
-    QWidget *parentWidget = nullptr;
-
-    if (job) {
-        parentWidget = KJobWidgets::window(job);
-    }
-
-    if (!parentWidget) {
-        parentWidget = d->m_parentWidget;
-    }
-
-    if (!parentWidget) {
-        parentWidget = qApp->activeWindow();
-    }
-
     QMetaObject::invokeMethod(qGuiApp, [=] {
-        auto *dlg = new KIO::RenameDialog(parentWidget, title, src, dest, options, sizeSrc, sizeDest, ctimeSrc, ctimeDest, mtimeSrc, mtimeDest);
+        auto *dlg = new KIO::RenameDialog(d->getParentWidget(job), title, src, dest, options, sizeSrc, sizeDest, ctimeSrc, ctimeDest, mtimeSrc, mtimeDest);
 
         dlg->setAttribute(Qt::WA_DeleteOnClose);
         dlg->setWindowModality(Qt::WindowModal);
@@ -161,22 +181,8 @@ void KIO::WidgetsAskUserActionHandler::askUserRename(KJob *job,
 
 void KIO::WidgetsAskUserActionHandler::askUserSkip(KJob *job, KIO::SkipDialog_Options options, const QString &errorText)
 {
-    QWidget *parentWidget = nullptr;
-
-    if (job) {
-        parentWidget = KJobWidgets::window(job);
-    }
-
-    if (!parentWidget) {
-        parentWidget = d->m_parentWidget;
-    }
-
-    if (!parentWidget) {
-        parentWidget = qApp->activeWindow();
-    }
-
     QMetaObject::invokeMethod(qGuiApp, [=] {
-        auto *dlg = new KIO::SkipDialog(parentWidget, options, errorText);
+        auto *dlg = new KIO::SkipDialog(d->getParentWidget(job), options, errorText);
         dlg->setAttribute(Qt::WA_DeleteOnClose);
         dlg->setWindowModality(Qt::WindowModal);
 
@@ -374,16 +380,6 @@ void KIO::WidgetsAskUserActionHandler::requestUserMessageBox(MessageDialogType t
         return;
     }
 
-    QWidget *parentWidget = parent;
-
-    if (!parentWidget) {
-        parentWidget = d->m_parentWidget;
-    }
-
-    if (!parentWidget) {
-        parentWidget = qApp->activeWindow();
-    }
-
     const KGuiItem primaryActionButton(primaryActionText, primaryActionIconName);
     const KGuiItem secondaryActionButton(secondaryActionText, secondaryActionIconName);
 
@@ -427,7 +423,7 @@ void KIO::WidgetsAskUserActionHandler::requestUserMessageBox(MessageDialogType t
 
     QMetaObject::invokeMethod(qGuiApp, [=]() {
         auto cancelButton = hasCancelButton ? KStandardGuiItem::cancel() : KGuiItem();
-        auto *dialog = new KMessageDialog(dlgType, text, parentWidget);
+        auto *dialog = new KMessageDialog(dlgType, text, d->getParentWidget(parent));
 
         dialog->setAttribute(Qt::WA_DeleteOnClose);
         dialog->setCaption(title);
@@ -482,15 +478,7 @@ void KIO::WidgetsAskUserActionHandler::setWindow(QWidget *window)
 
 void KIO::WidgetsAskUserActionHandler::askIgnoreSslErrors(const QVariantMap &sslErrorData, QWidget *parent)
 {
-    QWidget *parentWidget = parent;
-
-    if (!parentWidget) {
-        parentWidget = d->m_parentWidget;
-    }
-
-    if (!parentWidget) {
-        parentWidget = qApp->activeWindow();
-    }
+    QWidget *parentWidget = d->getParentWidget(parent);
 
     QString message = i18n("The server failed the authenticity check (%1).\n\n", sslErrorData[QLatin1String("hostname")].toString());
 
-- 
GitLab

