From d11f006f35126f5a09868df442595f8e42611cb5 Mon Sep 17 00:00:00 2001
From: Nicolas Fella <nicolas.fella@gmx.de>
Date: Fri, 24 Nov 2023 12:38:51 +0100
Subject: [PATCH] Add working dir to QUrl::fromUserInput calls

Otherwise a relative URL won't be resolved properly

BUG: 477456
---
 app/batchextract.cpp |  2 +-
 app/main.cpp         | 17 +++++++++--------
 kerfuffle/jobs.cpp   |  2 +-
 part/part.cpp        |  4 ++--
 4 files changed, 13 insertions(+), 12 deletions(-)

diff --git a/app/batchextract.cpp b/app/batchextract.cpp
index c25d3f8ce..9758920c8 100644
--- a/app/batchextract.cpp
+++ b/app/batchextract.cpp
@@ -241,7 +241,7 @@ bool BatchExtract::showExtractDialog()
 
     dialog.data()->setModal(true);
     dialog.data()->setAutoSubfolder(autoSubfolder());
-    dialog.data()->setCurrentUrl(QUrl::fromUserInput(destinationFolder(), QString(), QUrl::AssumeLocalFile));
+    dialog.data()->setCurrentUrl(QUrl::fromUserInput(destinationFolder(), QDir::currentPath(), QUrl::AssumeLocalFile));
     dialog.data()->setPreservePaths(preservePaths());
 
     // Only one archive, we need a LoadJob to get the single-folder and subfolder properties.
diff --git a/app/main.cpp b/app/main.cpp
index 07cf7fc1d..8960823e1 100644
--- a/app/main.cpp
+++ b/app/main.cpp
@@ -17,6 +17,7 @@
 #include <QCommandLineParser>
 #include <QFileInfo>
 #include <QFileOpenEvent>
+#include <QDir>
 
 #include <KAboutData>
 #include <KCrash>
@@ -236,7 +237,7 @@ int main(int argc, char **argv)
             if (parser.isSet(QStringLiteral("add-to"))) {
                 qCDebug(ARK) << "Setting filename to" << parser.value(QStringLiteral("add-to"));
                 addToArchiveJob->setFilename(QUrl::fromUserInput(parser.value(QStringLiteral("add-to")),
-                                                                 QString(),
+                                                                 QDir::currentPath(),
                                                                  QUrl::AssumeLocalFile));
             }
 
@@ -247,8 +248,8 @@ int main(int argc, char **argv)
 
             for (int i = 0; i < urls.count(); ++i) {
                 //TODO: use the returned value here?
-                qCDebug(ARK) << "Adding url" << QUrl::fromUserInput(urls.at(i), QString(), QUrl::AssumeLocalFile);
-                addToArchiveJob->addInput(QUrl::fromUserInput(urls.at(i), QString(), QUrl::AssumeLocalFile));
+                qCDebug(ARK) << "Adding url" << QUrl::fromUserInput(urls.at(i), QDir::currentPath(), QUrl::AssumeLocalFile);
+                addToArchiveJob->addInput(QUrl::fromUserInput(urls.at(i), QDir::currentPath(), QUrl::AssumeLocalFile));
             }
 
             if (parser.isSet(QStringLiteral("dialog"))) {
@@ -272,8 +273,8 @@ int main(int argc, char **argv)
             QObject::connect(batchJob, &KJob::result, &application, &QCoreApplication::quit, Qt::QueuedConnection);
 
             for (int i = 0; i < urls.count(); ++i) {
-                qCDebug(ARK) << "Adding url" << QUrl::fromUserInput(urls.at(i), QString(), QUrl::AssumeLocalFile);
-                batchJob->addInput(QUrl::fromUserInput(urls.at(i), QString(), QUrl::AssumeLocalFile));
+                qCDebug(ARK) << "Adding url" << QUrl::fromUserInput(urls.at(i), QDir::currentPath(), QUrl::AssumeLocalFile);
+                batchJob->addInput(QUrl::fromUserInput(urls.at(i), QDir::currentPath(), QUrl::AssumeLocalFile));
             }
 
             if (parser.isSet(QStringLiteral("autosubfolder"))) {
@@ -282,7 +283,7 @@ int main(int argc, char **argv)
             }
 
             if (parser.isSet(QStringLiteral("autodestination"))) {
-                QString autopath = QFileInfo(QUrl::fromUserInput(urls.at(0), QString(), QUrl::AssumeLocalFile).path()).path();
+                QString autopath = QFileInfo(QUrl::fromUserInput(urls.at(0), QDir::currentPath(), QUrl::AssumeLocalFile).path()).path();
                 qCDebug(ARK) << "By autodestination, setting path to " << autopath;
                 batchJob->setDestinationFolder(autopath);
             }
@@ -325,12 +326,12 @@ int main(int argc, char **argv)
             }
 
             if (!urls.isEmpty()) {
-                qCDebug(ARK) << "Trying to open" << QUrl::fromUserInput(urls.at(0), QString(), QUrl::AssumeLocalFile);
+                qCDebug(ARK) << "Trying to open" << QUrl::fromUserInput(urls.at(0), QDir::currentPath(), QUrl::AssumeLocalFile);
 
                 if (parser.isSet(QStringLiteral("dialog"))) {
                     window->setShowExtractDialog(true);
                 }
-                window->openUrl(QUrl::fromUserInput(urls.at(0), QString(), QUrl::AssumeLocalFile));
+                window->openUrl(QUrl::fromUserInput(urls.at(0), QDir::currentPath(), QUrl::AssumeLocalFile));
             }
             new OpenFileEventHandler(&application, window);
             window->show();
diff --git a/kerfuffle/jobs.cpp b/kerfuffle/jobs.cpp
index 50a94d638..910d7e580 100644
--- a/kerfuffle/jobs.cpp
+++ b/kerfuffle/jobs.cpp
@@ -447,7 +447,7 @@ void BatchExtractJob::setupDestination()
         }
 
         if (d.exists(subfolderName)) {
-            subfolderName = KFileUtils::suggestName(QUrl::fromUserInput(m_destination, QString(), QUrl::AssumeLocalFile), subfolderName);
+            subfolderName = KFileUtils::suggestName(QUrl::fromUserInput(m_destination, QDir::currentPath(), QUrl::AssumeLocalFile), subfolderName);
         }
 
         d.mkdir(subfolderName);
diff --git a/part/part.cpp b/part/part.cpp
index d68908caa..02eb02833 100644
--- a/part/part.cpp
+++ b/part/part.cpp
@@ -291,7 +291,7 @@ void Part::extractSelectedFilesTo(const QString& localPath)
         return;
     }
 
-    const QUrl url = QUrl::fromUserInput(localPath, QString());
+    const QUrl url = QUrl::fromUserInput(localPath, QDir::currentPath());
 
     auto doExtract = [this](const QString &destination) {
         qCDebug(ARK) << "Extract to" << destination;
@@ -1062,7 +1062,7 @@ void Part::slotOpenExtractedEntry(KJob *job)
             QFile::setPermissions(fullName, QFileDevice::ReadOwner | QFileDevice::ReadGroup | QFileDevice::ReadOther);
         }
 
-        const QUrl url = QUrl::fromUserInput(fullName, QString(), QUrl::AssumeLocalFile);
+        const QUrl url = QUrl::fromUserInput(fullName, QDir::currentPath(), QUrl::AssumeLocalFile);
         if (qobject_cast<OpenWithJob*>(job)) {
             // Constructing an ApplicationLauncherJob without an argument will
             // trigger the openWith dialog
-- 
GitLab

