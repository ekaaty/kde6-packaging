From 645b6d38687d6e299aefa68c9ced13f57bcd2c96 Mon Sep 17 00:00:00 2001
From: Alessandro Astone <ales.astone@gmail.com>
Date: Wed, 15 Nov 2023 23:22:56 +0100
Subject: [PATCH 1/2] screencast: Fix GLES path

glReadPixels reads from the bound framebuffer, so create an offscreen
framebuffer and attach the texture to it

Co-authored-by: Jan Grulich <jgrulich@redhat.com>
---
 src/plugins/screencast/screencastutils.h | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/src/plugins/screencast/screencastutils.h b/src/plugins/screencast/screencastutils.h
index 1484e37dc71..9f7c815f210 100644
--- a/src/plugins/screencast/screencastutils.h
+++ b/src/plugins/screencast/screencastutils.h
@@ -60,7 +60,10 @@ static void doGrabTexture(GLTexture *texture, spa_data *spa, spa_video_format fo
 
     texture->bind();
     if (GLPlatform::instance()->isGLES()) {
+        GLFramebuffer fbo(texture);
+        GLFramebuffer::pushFramebuffer(&fbo);
         glReadPixels(0, 0, size.width(), size.height(), closestGLType(format), GL_UNSIGNED_BYTE, spa->data);
+        GLFramebuffer::popFramebuffer();
     } else if (GLPlatform::instance()->glVersion() >= Version(4, 5)) {
         glGetTextureImage(texture->texture(), 0, closestGLType(format), GL_UNSIGNED_BYTE, spa->chunk->size, spa->data);
     } else {
-- 
GitLab


From 6ec14f7f65b70669cef310c2c28845f4b440fa49 Mon Sep 17 00:00:00 2001
From: Alessandro Astone <ales.astone@gmail.com>
Date: Wed, 15 Nov 2023 23:23:14 +0100
Subject: [PATCH 2/2] screencast: Make nvidia use the GLES path

glGetTexImage returns a black image

Fixes: BUG:476602
---
 src/plugins/screencast/screencastutils.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/plugins/screencast/screencastutils.h b/src/plugins/screencast/screencastutils.h
index 9f7c815f210..8022967f8b1 100644
--- a/src/plugins/screencast/screencastutils.h
+++ b/src/plugins/screencast/screencastutils.h
@@ -59,7 +59,7 @@ static void doGrabTexture(GLTexture *texture, spa_data *spa, spa_video_format fo
     }
 
     texture->bind();
-    if (GLPlatform::instance()->isGLES()) {
+    if (GLPlatform::instance()->isGLES() || GLPlatform::instance()->driver() == Driver_NVidia) {
         GLFramebuffer fbo(texture);
         GLFramebuffer::pushFramebuffer(&fbo);
         glReadPixels(0, 0, size.width(), size.height(), closestGLType(format), GL_UNSIGNED_BYTE, spa->data);
-- 
GitLab

